# Database configurations
# %prod.quarkus.datasource.db-kind=postgresql
# %prod.quarkus.datasource.jdbc.driver=org.postgresql.Driver
# %prod.quarkus.datasource.jdbc.url=${DB_JDBC_URL}
# %prod.quarkus.datasource.username=${DB_USERNAME}
# %prod.quarkus.datasource.password=${DB_PASSWORD}
# %prod.quarkus.hibernate-orm.database.generation=drop-and-create
# %prod.quarkus.hibernate-orm.sql-load-script=import.sql

# Kubernetes configurations
%prod.quarkus.kubernetes.deployment-target=kubernetes
%prod.quarkus.kubernetes.service-type=load-balancer
%prod.quarkus.kubernetes.env.secrets=db-secret
%prod.quarkus.kubernetes.env.mapping.DB_JDBC_URL.from-secret=db-secret
%prod.quarkus.kubernetes.env.mapping.DB_JDBC_URL.with-key=jdbcurl
%prod.quarkus.kubernetes.env.mapping.DB_USERNAME.from-secret=db-secret
%prod.quarkus.kubernetes.env.mapping.DB_USERNAME.with-key=dbusername
%prod.quarkus.kubernetes.env.mapping.DB_PASSWORD.from-secret=db-secret
%prod.quarkus.kubernetes.env.mapping.DB_PASSWORD.with-key=dbpassword

# Container Image Build
# %prod.quarkus.container-image.build=true
# %prod.quarkus.container-image.registry=<LOGIN_SERVER_VALUE>
# %prod.quarkus.container-image.group=<USER_NAME_VALUE>
# %prod.quarkus.container-image.name=todo-quarkus-aks
# %prod.quarkus.container-image.tag=1.0

# MacOS arm64
# %prod.quarkus.jib.platforms=linux/x86_64
